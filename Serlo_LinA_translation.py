# -*- coding: utf-8 -*-

import numpy as np
import pandas as pd
import codecs


file = open("Serlo.txt")
temp = file.read()
file.close()



# dedicated linear algebra part

temp = temp.replace("Vektorräume", "vector spaces")
temp = temp.replace("Vektorraums", "vector space")
temp = temp.replace("Vektorraum", "vector space")
temp = temp.replace("Untervektorräume", "subspaces")
temp = temp.replace("Untervektorraums", "subspace")
temp = temp.replace("Untervektorraum", "subspace")

temp = temp.replace("Linearkombinationen", "linear combinations")
temp = temp.replace("Linearkombination", "linear combination")

temp = temp.replace("linearen", "linear")
temp = temp.replace("lineares", "linear")
temp = temp.replace("lineare", "linear")
temp = temp.replace("Algebra ", "algebra ")
temp = temp.replace("Hülle ", "hull ")

temp = temp.replace("Das Erzeugnis von", "The span of")
temp = temp.replace("das Erzeugnis von", "the span of")
temp = temp.replace("Das Erzeugnis", "The span")
temp = temp.replace("das Erzeugnis", "the span")
temp = temp.replace("als Erzeugnis", "as a span")
temp = temp.replace("des Erzeugnisses", "of the span")
temp = temp.replace("Erzeugende", "Spanning")

temp = temp.replace("des Spanns", "of the span")
temp = temp.replace("der Spann", "the span")


temp = temp.replace("eines Vektors", "of a vector")
temp = temp.replace("zweier Vektoren", "of two vectors")
temp = temp.replace("Vektoren", "vectors")

temp = temp.replace("Ursprungsgerade", "line through the origin")
temp = temp.replace("Ursprungsgerade", "line through the origin")
temp = temp.replace("Ursprungsgerade", "line through the origin")

temp = temp.replace("Ursprungsebene", "plane through the origin")
temp = temp.replace("Ebenen", "planes")
temp = temp.replace("Ebene", "plane")

temp = temp.replace("Idempotenz", "idempotency")
temp = temp.replace("Abgeschlossenheit", "completeness")

temp = temp.replace("der Addition", "of addition")
temp = temp.replace("der skalaren Multiplikation", "of scalar multiplication")

temp = temp.replace("Gleichungssysteme", "systems of equations")
temp = temp.replace("Gleichungssystems", "system of equations")
temp = temp.replace("Gleichungssystem", "system of equations")



temp = temp.replace(" von  ", " of ")
temp = temp.replace("Setze ", "set ")
temp = temp.replace("Bzw. ", "or ")
temp = temp.replace("Monome", "monomials")
temp = temp.replace("des Monoms ", "of the monomial ")
temp = temp.replace("Monom ", "monomial ")
temp = temp.replace("Polynome ", "polynomials ")
temp = temp.replace("des Polynoms ", "of the polynomial ")
temp = temp.replace("Polynom ", "polynomial ")
temp = temp.replace("geraden", "even")
temp = temp.replace("ungeraden", "odd")
temp = temp.replace("gerade", "even")
temp = temp.replace("ungerade", "odd")
temp = temp.replace("und somit", "and hence")

temp = temp.replace("Es ist", "There is")
temp = temp.replace("Es gilt", "There is")
temp = temp.replace("Verständnisfrage", "Question")
temp = temp.replace("Analog gilt", "Analogously")
temp = temp.replace("1. Fall", "case 1")
temp = temp.replace("2. Fall", "case 2")
temp = temp.replace("3. Fall", "case 3")
temp = temp.replace("4. Fall", "case 4")
temp = temp.replace("5. Fall", "case 5")
temp = temp.replace("Die Summe ", "The sum ")
temp = temp.replace("Die Reihe ", "The series ")
temp = temp.replace("Die Folge ", "The sequence ")
temp = temp.replace("Die Funktion ", "The function ")
temp = temp.replace(" für alle ", " for all ")
temp = temp.replace("für gerade ", "for even ")
temp = temp.replace("für ungerade ", "for odd ")
temp = temp.replace("Induktionsvoraussetzung", "induction assumption")
temp = temp.replace("Induktions-", "induction")
temp = temp.replace("voraussetzung}", "assumption}")
temp = temp.replace("Dann gilt", "Then, there is")
temp = temp.replace("Es gilt", "There is")
temp = temp.replace(" gilt", " there is")
temp = temp.replace("Imaginärteils", "imaginary part")
temp = temp.replace("Imaginärteil", "imaginary part")
temp = temp.replace("Realteils", "real part")
temp = temp.replace("Realteil", "real part")
temp = temp.replace("Dann folgt", "Then, there is")

temp = temp.replace("der folgenden", "of the following")
temp = temp.replace("Kriteriums ", "criterion ")
temp = temp.replace("Kriterium ", "criterion ")
temp = temp.replace("falsche", "false")
temp = temp.replace("falsch", "false")

temp = temp.replace("Zeige, dass", "Show that")
temp = temp.replace("Zeige", "Show that")
temp = temp.replace("Also ist", "So")
temp = temp.replace("Teilaufgabe", "Part")
temp = temp.replace("Bestimme", "Determine")
temp = temp.replace("Berechne ", "Compute ")
temp = temp.replace("Schritt ", "Step ")
temp = temp.replace("Lösung: ", "Solution: ")
temp = temp.replace("Folgengliedern", "sequence elements")
temp = temp.replace("Folgenglieder", "sequences elements")
temp = temp.replace("Folgen", "sequences")
temp = temp.replace("Folge", "sequence")
temp = temp.replace("konstanten ", "constant ")
temp = temp.replace("arithmetischen ", "arithmetic ")
temp = temp.replace("geometrischen ", "geometric ")
temp = temp.replace("haarmonischen ", "harmonic ")
temp = temp.replace("konstante ", "constant ")
temp = temp.replace("arithmetische ", "arithmetic ")
temp = temp.replace("geometrische ", "geometric ")
temp = temp.replace("haarmonische ", "harmonic ")
temp = temp.replace("alternierende ", "alternating ")
temp = temp.replace("Komplexe ", "complex ")
temp = temp.replace("Komplexen ", "complex ")
temp = temp.replace("komplexe ", "complex ")
temp = temp.replace("komplexen ", "complex ")
temp = temp.replace("Konjugation ", "conjugation ")
temp = temp.replace(" Zahlen", " numbers")
temp = temp.replace(" Zahl", " number")
temp = temp.replace("reell ", "real ")
temp = temp.replace("reelle ", "real ")
temp = temp.replace("Zeige:", "Show: ")
temp = temp.replace("Beispiel ", "Example ")
temp = temp.replace("''nicht''", "''not''")

temp = temp.replace("Definitionsbereichs", "domain of definition")
temp = temp.replace("Definitionsbereich", "domain of definition")
temp = temp.replace("Wertebereichs", "range of values")
temp = temp.replace("Wertebereich", "range of values")

temp = temp.replace("Übungsaufgabe ", "exercise ")
temp = temp.replace("Aufgabe ", "exercise ")
temp = temp.replace("Satz ", "theorem ")
temp = temp.replace("Schritt ", "Step ")

temp = temp.replace("Definitionsbereichs", "domain of definition")
temp = temp.replace("Definitionsbereich", "domain of definition ")
temp = temp.replace("beliebig ", "arbitrary ")
temp = temp.replace("Da ", "Since ")
temp = temp.replace("Für eine ", "For a ")
temp = temp.replace("Für ein ", "For a ")
temp = temp.replace("Für ", "For ")
temp = temp.replace(" und ", " and ")
temp = temp.replace("falls", "if")
temp = temp.replace(" mit ", " with ")
temp = temp.replace(" für <", " for <")
temp = temp.replace(" oder <", " or <")
temp = temp.replace("Es sei ", "Let ")
temp = temp.replace("Seien ", "Let ")
temp = temp.replace("Sei ", "Let ")
temp = temp.replace("jedes", "every ")
temp = temp.replace("jeder", "every ")
temp = temp.replace("jede", "every ")


file = open("Serlo.txt","w")
file.write(temp)
file.close()

#print(temp)

