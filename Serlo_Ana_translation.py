# -*- coding: utf-8 -*-

import numpy as np
import pandas as pd
import codecs


file = open("Serlo.txt")
temp = file.read()
file.close()




temp = temp.replace("Aufgaben", "Exercises")
temp = temp.replace(" von  ", " of ")
temp = temp.replace("geraden", "even")
temp = temp.replace("ungeraden", "odd")
temp = temp.replace("gerade", "even")
temp = temp.replace("ungerade", "odd")
temp = temp.replace("und somit", "and hence")

temp = temp.replace("Es ist", "We have that")
temp = temp.replace("Es gilt", "We have that")
temp = temp.replace("Verständnisfrage", "Question")
temp = temp.replace("Analog gilt", "Analogously")
temp = temp.replace("1. Fall", "case 1")
temp = temp.replace("2. Fall", "case 2")
temp = temp.replace("3. Fall", "case 3")
temp = temp.replace("4. Fall", "case 4")
temp = temp.replace("5. Fall", "case 5")
temp = temp.replace("Die Summe ", "The sum ")
temp = temp.replace("Die Reihe ", "The series ")
temp = temp.replace("Die Folge ", "The sequence ")
temp = temp.replace("Die Funktion ", "The function ")
temp = temp.replace(" für alle ", " for all ")
temp = temp.replace("für gerade ", "for even ")
temp = temp.replace("für ungerade ", "for odd ")
temp = temp.replace("Induktionsvoraussetzung", "induction assumption")
temp = temp.replace("Induktions-", "induction")
temp = temp.replace("voraussetzung}", "assumption}")
temp = temp.replace("Produkt-", "product")
temp = temp.replace("regel", "rule")
temp = temp.replace("positive Definitheit", "positive definiteness")
temp = temp.replace("Dreiecksungleichung", "triangle inequality")
temp = temp.replace("Dann gilt", "Then, we have")
temp = temp.replace("Es gilt", "We have that")
temp = temp.replace(" gilt", " we have that")
temp = temp.replace("Imaginärteils", "imaginary part")
temp = temp.replace("Imaginärteil", "imaginary part")
temp = temp.replace("Realteils", "real part")
temp = temp.replace("Realteil", "real part")
temp = temp.replace("Dann folgt", "Then, we have")

temp = temp.replace("der folgenden", "of the following")
temp = temp.replace("Charakterisierung der", "characterization of the")
temp = temp.replace("Potenzfunktion", "power function")
temp = temp.replace("Exponentialfunktion", "exponential function")
temp = temp.replace("Umkehrfunktion", "inverse function")
temp = temp.replace("Logarithmusfunktion", "logarithm function")
temp = temp.replace("Sinusfunktion", "sine function")
temp = temp.replace("Cosinusfunktion", "cosine function")
temp = temp.replace("Kosinusfunktion", "cosine function")
temp = temp.replace("Tangensfunktion", "tangent function")
temp = temp.replace("Hilfskuntion", "auxiliary function")
temp = temp.replace("Mittelwertsatzes", "mean value theorem")
temp = temp.replace("Mittelwertsatz", "mean value theorem")
temp = temp.replace("Kriteriums ", "criterion ")
temp = temp.replace("Kriterium ", "criterion ")
temp = temp.replace("falsche", "false")
temp = temp.replace("falsch", "false")

temp = temp.replace("Zeige, dass", "Show that")
temp = temp.replace("Zeige", "Show that")
temp = temp.replace("Also ist", "So")
temp = temp.replace("Teilaufgabe", "Part")
temp = temp.replace("Bestimme", "Determine")
temp = temp.replace("Berechne ", "Compute ")
temp = temp.replace("Schritt ", "Step ")
temp = temp.replace("Lösung: ", "Solution: ")
temp = temp.replace("Folgengliedern", "sequence elements")
temp = temp.replace("Folgenglieder", "sequences elements")
temp = temp.replace("Folgen", "sequences")
temp = temp.replace("Folge", "sequence")
temp = temp.replace("konstanten ", "constant ")
temp = temp.replace("arithmetischen ", "arithmetic ")
temp = temp.replace("geometrischen ", "geometric ")
temp = temp.replace("haarmonischen ", "harmonic ")
temp = temp.replace("konstante ", "constant ")
temp = temp.replace("arithmetische ", "arithmetic ")
temp = temp.replace("geometrische ", "geometric ")
temp = temp.replace("haarmonische ", "harmonic ")
temp = temp.replace("alternierende ", "alternating ")
temp = temp.replace("Komplexe ", "complex ")
temp = temp.replace("Komplexen ", "complex ")
temp = temp.replace("komplexe ", "complex ")
temp = temp.replace("komplexen ", "complex ")
temp = temp.replace("Konjugation ", "conjugation ")
temp = temp.replace(" Zahlen", " numbers")
temp = temp.replace(" Zahl", " number")
temp = temp.replace("reell ", "real ")
temp = temp.replace("reelle ", "real ")
temp = temp.replace("Zeige:", "Show: ")
temp = temp.replace("Beispiel ", "Example ")
temp = temp.replace("''nicht''", "''not''")

temp = temp.replace("Definition von", "definition of")
temp = temp.replace("Definitionsbereichs", "domain of definition")
temp = temp.replace("Definitionsbereich", "domain of definition")
temp = temp.replace("Wertebereichs", "range of values")
temp = temp.replace("Wertebereich", "range of values")

temp = temp.replace("monoton steigende", "monotonously increasing")
temp = temp.replace("monoton fallende", "monotonously decreasing")
temp = temp.replace("monoton steigend", "monotonously increasing")
temp = temp.replace("monoton fallend", "monotonously decreasing")
temp = temp.replace("monotone ", "monotonous ")
temp = temp.replace("monoton ", "monotonous ")
temp = temp.replace("streng", "strictly")
temp = temp.replace("Monotoniekriteriums", "monotony criterion")
temp = temp.replace("Monotoniekriterium", "monotony criterion")

temp = temp.replace("in null", "at zero")
temp = temp.replace("erste Ableitung", "first derivative")
temp = temp.replace("zweite Ableitung", "second derivative")
temp = temp.replace("dritte Ableitung", "third derivative")
temp = temp.replace("Ableitungsfunktion", "derivative function")
temp = temp.replace("Ableitungen", "derivatives")
temp = temp.replace(" Ableitung", " derivative")
temp = temp.replace("Summenregel", "sum rule")
temp = temp.replace("Summen-", "sum-")
temp = temp.replace("Kettenregel", "chain rule")
temp = temp.replace("Ketten-", "chain-")
temp = temp.replace("Produktregel", "product rule")
temp = temp.replace("Produkt-", "product-")
temp = temp.replace("Quotientenregel", "quotient rule")
temp = temp.replace("Quotienten-", "quotient-")
temp = temp.replace("Differenzierbarkeit", "differentiability")
temp = temp.replace("differenzierbare", "differentiable")
temp = temp.replace("differenzierbar", "differentiable")
temp = temp.replace("Stetigkeit", "continuity")
temp = temp.replace("stetige", "continuous")
temp = temp.replace("stetig", "continuous")
temp = temp.replace("Betragesfunktion", "absolute function")
temp = temp.replace("Vorzeichenfunktion", "sign function")
temp = temp.replace("die Funktionen ", "the functions ")
temp = temp.replace("die Funktion ", "the function ")
temp = temp.replace("Funktionen", "functions")
temp = temp.replace("Funktion", "function")

temp = temp.replace("Übungsaufgabe ", "exercise ")
temp = temp.replace("Aufgabe ", "exercise ")
temp = temp.replace("Satz ", "theorem ")
temp = temp.replace("Schritt ", "Step ")

temp = temp.replace("Differentialquotienten", "differential quotient")
temp = temp.replace("Differentialquotient", "differential quotient")
temp = temp.replace("Differenzenquotienten", "difference quotient")
temp = temp.replace("Differenzenquotient", "difference quotient")

temp = temp.replace("Definitionsbereichs", "domain of definition")
temp = temp.replace("Definitionsbereich", "domain of definition ")
temp = temp.replace("beliebig ", "arbitrary ")
temp = temp.replace("Da ", "Since ")
temp = temp.replace("Für eine ", "For a ")
temp = temp.replace("Für ein ", "For a ")
temp = temp.replace("Für ", "For ")
temp = temp.replace(" und ", " and ")
temp = temp.replace("falls", "if")
temp = temp.replace(" mit ", " with ")
temp = temp.replace(" für <", " for <")
temp = temp.replace(" oder <", " or <")
temp = temp.replace("Es sei ", "Let ")
temp = temp.replace("Seien ", "Let ")
temp = temp.replace("Sei ", "Let ")
temp = temp.replace("jedes", "every ")
temp = temp.replace("jeder", "every ")
temp = temp.replace("jede", "every ")


file = open("Serlo.txt","w")
file.write(temp)
file.close()

#print(temp)

